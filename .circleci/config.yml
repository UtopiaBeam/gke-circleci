version: 2.0
jobs:
  build_and_test:
    working_directory: ~/project
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: yarn test
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  push_to_gcr:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTER_ZONE}
      - run:
          name: Build docker image
          command: docker build --rm=false -t gke-circleci .
      - run:
          name: Tag the image with registry name
          command: docker tag gke-circleci gcr.io/${GOOGLE_PROJECT_ID}/gke-circleci:v1.0
      - run:
          name: Push the image
          command: gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/gke-circleci:v1.0


  deploy_to_k8s:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTER_ZONE}
      - run:
          name: Connect to cluster
          command: gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Create deployment
          command: kubectl create --dry-run=true -o yaml -f k8s-deployment.yml | kubectl apply -f -
      - run:
          name: Create service
          command: kubectl create --dry-run=true -o yaml -f k8s-service.yml | kubectl apply -f -

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - push_to_gcr:
          requires:
            - build_and_test
      - deploy_to_k8s:
          requires:
            - build_and_test
            - push_to_gcr
          filters:
            branches:
              only: master
